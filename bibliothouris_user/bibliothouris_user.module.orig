<?php
/**
 * @file
 * Drupal needs this blank file.
 */

function bibliothouris_user_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'user_register_form'){
    hide_roles($form);
    select_automatic_email($form);
    select_member_role($form);
    $form['#validate'][] = 'bibliothouris_user_user_register_validate';
  }elseif ( $form_id == 'user_profile_form') {
    hide_roles($form);
    $form['#validate'][] = 'bibliothouris_user_user_register_validate';
  }

}

function hide_roles(&$form) {
  global $user;
  $roles = db_query("SELECT r.name FROM {users_roles} ur LEFT JOIN {role} r ON r.rid=ur.rid WHERE ur.uid=:uid", array('uid' => $user->uid))->fetchCol();
  $admin = db_query("SELECT rid FROM {role} WHERE name = :name", array('name' => "administrator"))->fetchField();
  $authenticated_user = db_query("SELECT rid FROM {role} WHERE name = :name", array('name' => "authenticated user"))->fetchField();

  $is_admin = false;
  foreach($roles as $role) {
    if ($role == "administrator") {
      $is_admin = true;
    }
  }
  if (!$is_admin) {
    $form['account']['roles'][$admin]['#access'] = FALSE;
  }

  $form['account']['roles'][$authenticated_user]['#access'] = FALSE;


}

function select_automatic_email(&$form) {
  $form['account']['notify']['#default_value'] = TRUE;
}

function select_member_role(&$form) {
  $member = db_query("SELECT rid FROM {role} WHERE name = :name", array('name' => "library member"))->fetchField();
  $form['account']['roles'][$member]['#default_value'] = TRUE;
}

function bibliothouris_user_user_register_validate($form, &$form_state) {
<<<<<<< HEAD
  $national_number =  $form_state['values']['field_national_number']['und']['0']['value'];
  $birthday = $form_state['values']['field_date_of_birth']['und']['0']['value'];

  validate_national_number($national_number, $birthday);

=======
//  form_set_error('field_national_number', 'National number does not match day of birth');
>>>>>>> 8895ed8f062aac8f2b62604988d036dbe6e1c524
}

function validate_national_number($national_number, $birthday) {
  if ($national_number != null && $birthday != null) {
    $national_number = str_replace(array("-", " ", "."), "", $national_number);
    if (strlen($national_number) != 11) {
      form_set_error('field_national_number', 'National number must contain 11 numbers.');
      return false;
    }elseif (is_numeric($national_number)){
      $year = substr($birthday, 2,2);
      $month = substr($birthday, 5,2);
      $day = substr($birthday, 8,2);
      $start_national_number = "$year"."$month"."$day";
      if (substr($national_number, 0, strlen($start_national_number)) != $start_national_number){
        form_set_error('field_national_number', 'National number does not match day of birth.');
        return false;
      } else {
        $entered_check = substr($national_number,9,2);
        $order = substr($national_number,6,3);
        $start_national_number ="$start_national_number"."$order";
        if (substr($birthday,0,1) == 2) {
          $start_national_number = "2"."$start_national_number";
        }
        $modulus = $start_national_number % 97;
        $wanted_check = 97 - $modulus;

        if ($wanted_check != $entered_check) {
          form_set_error('field_national_number', "Invalid national number."."$wanted_check"." $entered_check");
          return false;
        }
      }
    } else {
      form_set_error('field_national_number', 'National number can only contain numbers, spaces, dashes.');
      return false;
    }
  }
}
